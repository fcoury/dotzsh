edng() {
  atom "~/ng-book2/manuscript/code/$*"
}

rl() {
  sed -i '' -e "${1}d" $HOME/.ssh/known_hosts
}

syncall() {
  folders=(
    'config' 'workflow-engine' 'page-builder' 'page-builder-interface'
    'case-management' 'mongodb-promise' 'providers'
  )

  for i in $folders; do
    cd "$HOME/code/$i"
    hub sync
  done
}

rename() {
  for i in $1*
  do
      mv "$i" "${i/$1/$2}"
  done
}

initconda() {
  # >>> conda initialize >>>
  # !! Contents within this block are managed by 'conda init' !!
  __conda_setup="$('/Users/fcoury/opt/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
  if [ $? -eq 0 ]; then
      eval "$__conda_setup"
  else
      if [ -f "/Users/fcoury/opt/anaconda3/etc/profile.d/conda.sh" ]; then
          . "/Users/fcoury/opt/anaconda3/etc/profile.d/conda.sh"
      else
          export PATH="/Users/fcoury/opt/anaconda3/bin:$PATH"
      fi
  fi
  unset __conda_setup
  # <<< conda initialize <<<
}

alias r='bin/rails'
alias be='bundle exec'
alias gl="git log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias gp='git pull'
alias gps='git push'
alias gs='git status'
# alias grb='DEFBRANCH=`git defbranch` && git co "$DEFBRANCH" && git pull && git branch --merged "$DEFBRANCH" | grep -v "\* $DEFBRANCH" | grep -v master | xargs -n 1 git branch -d'
alias gpr='hub pull-request|xargs open'
alias gtr='git track'
alias gap='git add -p'

alias tv='tidy-viewer'
alias vi='nvim'
alias vim='nvim'

alias vivi='cd ~/.config/nvim/lua/user && nvim'

# MSuite
mc() {
  dir="$1"
  if [ -z "$1" ]; then
    dir=`pwd`
  fi

  # Store the current directory
  local prev_dir=$(pwd)

  # Use trap to ensure we change back to the previous directory
  # upon any signal or normal exit.
  trap "cd $prev_dir" EXIT

  cd /Users/fcoury/code/msuite.workspace/msuite
  cargo run -- -d config --env-file "${dir}/.env" --path "${dir}" --watch

  # Since we used trap, this line is not strictly necessary,
  # but it's good to leave it for clarity.
  cd $prev_dir
}

tt() {
  dir=`pwd`
  test="$1"
  if [ -z "$1" ]; then
    test="."
  fi

  # Store the current directory
  local prev_dir=$(pwd)

  # Use trap to ensure we change back to the previous directory
  # upon any signal or normal exit.
  trap "cd $prev_dir" EXIT SIGINT

  cd /Users/fcoury/code/msuite.workspace/msuite
  cargo watch -x 'run -- config --path '"${dir}"' --env-file '"${dir}/.env"' test '"${dir}/$1"' --watch'

  # Since we used trap, this line is not strictly necessary,
  # but it's good to leave it for clarity.
  cd $prev_dir
}
